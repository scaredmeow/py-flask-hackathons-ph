## Description

Single-database configuration for Flask.

## Prerequisites

- [SQLAlchemy](https://www.sqlalchemy.org/)
- [Marshmallow](https://marshmallow.readthedocs.io/en/stable/)
- [Flask](https://flask.palletsprojects.com/en/1.1.x/)
- [Flask-Migrate](https://flask-migrate.readthedocs.io/en/latest/)
- [Flask-SQLAlchemy](https://flask-sqlalchemy.palletsprojects.com/en/latest/)
- [Flask-Marshmallow](https://flask-marshmallow.readthedocs.io/en/latest/)

## Adding new models

1. **In creating any model class**, follow either of the following model and table declaration.
      1. [Flask-SQLAlchemy's 3.0 Model and Table Declaration](https://flask-sqlalchemy.palletsprojects.com/en/3.0.x/models/#defining-models).
      2. For **strict typing** you can use [Flask-SQLAlchemy's 3.1 Model and Table Declaration](https://flask-sqlalchemy.palletsprojects.com/en/3.1.x/models/#defining-models) that follows the latest [SQLAlchemy's Declarative Mapping](https://docs.sqlalchemy.org/en/20/orm/declarative_tables.html).
2. **[Recommended]** Create a new model class in `shared/models/extras.py` and use [Flask-SQLAlchemy's 3.0 Model and Table Declaration](https://flask-sqlalchemy.palletsprojects.com/en/3.0.x/models/#defining-models).
3. **[Optional]** Create a new python file in `shared/models` and add your corresponding model class in the file created. Use either of the model declaration.
4. If you created new python file for your model, go to the `shared/factories/app_fatory.py` file and add the following line of code in the `create_app` function.

      ```python
      # module.import_name("shared.models", python_file_name)

      module.import_name("shared.models", "notification")
      ```

## Checking Migration

1. If your using the cloud provisioned databases make sure that you follow the database setup in [README.md](../README.md#database-setup).
2. Run the following command to check if there are any changes in the models.

      ```bash
      flask db check
      ```

3. If there are changes in the models, run the following command to generate the migration files.

      ```bash
      flask db migrate -m "Your migration message goes here"
      ```

4. Check first the migration script created at `migrations/versions/` with a slug name *`<year><month><day>_<rev>_<slug>`* if it is correct, make changes if deemed necessary..
5. Run the following command to apply the migration files to the database.

      ```bash
      flask db upgrade
      ```

## Downgrading Migration

1. If your using the cloud provisioned databases make sure that you follow the database setup in [README.md](../README.md#database-setup).
2. Check the current revision id of the database by running the following command.

      ```bash
      flask db current
      ```

3. Check the downgrade script at `migrations/versions/` with a slug name *`<year><month><day>_<rev>_<slug>`* if it is correct, make changes if deemed necessary.
4. Run the following command to downgrade the migration files to the database.

      ```bash
      flask db downgrade <revision_id>
      ```
